{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport cookie from 'js-cookie';\nimport { API } from '../config'; //signup\n\nexport var Signup = function Signup(user) {\n  return fetch(\"\".concat(API, \"/signup\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //signin\n\n_c = Signup;\nexport var Signin = function Signin(user) {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //signout\n\n_c2 = Signin;\nexport var Signout = function Signout(next) {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n  return fetch(\"\".concat(API, \"/signout\"), {\n    method: 'GET'\n  }).then(function (response) {\n    console.log('signout success');\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //set cookie\n\n_c3 = Signout;\nexport var setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n}; //Remove cookie\n\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; //get cookie\n\nexport var getCookie = function getCookie(key) {\n  if (true) {\n    return cookie.get(key);\n  }\n}; //localstorage of cookie\n\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (true) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; //remove localstorage of cookie\n\nexport var removeLocalStorage = function removeLocalStorage(key) {\n  if (true) {\n    localStorage.removeItem(key);\n  }\n}; //authenticate user by pass data to cookie and localstorage\n\nexport var authenticate = function authenticate(data, next) {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n}; //check authentication\n\nexport var isAuth = function isAuth() {\n  if (true) {\n    var cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Signup\");\n$RefreshReg$(_c2, \"Signin\");\n$RefreshReg$(_c3, \"Signout\");","map":{"version":3,"sources":["C:/Users/OcheEmmy/Desktop/synergy/fontend1/action/auth.js"],"names":["fetch","cookie","API","Signup","user","method","headers","Accept","body","JSON","stringify","then","response","json","err","console","log","Signin","Signout","next","removeCookie","removeLocalStorage","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport cookie from 'js-cookie';\r\nimport {API} from '../config';\r\n\r\n//signup\r\nexport const Signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n//signin\r\nexport const Signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n//signout\r\nexport const Signout = (next) => {\r\n    removeCookie('token')\r\n    removeLocalStorage('user')\r\n    next()\r\n\r\n    return fetch(`${API}/signout`, {\r\n        method: 'GET'\r\n    })\r\n    .then(response => {\r\n        console.log('signout success');\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n//set cookie\r\n\r\nexport const setCookie = (key, value) => {\r\n    if (process.browser){\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\n//Remove cookie\r\n\r\nexport const removeCookie = (key) => {\r\n    if (process.browser){\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\n//get cookie\r\n\r\nexport const getCookie = (key) => {\r\n    if (process.browser){\r\n       return cookie.get(key);\r\n    }\r\n};\r\n\r\n//localstorage of cookie\r\nexport const setLocalStorage = (key, value) => {\r\n    if (process.browser) {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n};\r\n\r\n//remove localstorage of cookie\r\nexport const removeLocalStorage = (key) => {\r\n    if (process.browser) {\r\n        localStorage.removeItem(key)\r\n    }\r\n};\r\n\r\n//authenticate user by pass data to cookie and localstorage\r\nexport const authenticate = (data, next) => {\r\n    setCookie('token', data.token)\r\n    setLocalStorage('user', data.user);\r\n    next();\r\n};\r\n\r\n//check authentication\r\n\r\nexport const isAuth = () => {\r\n    if(process.browser) {\r\n        const cookieChecked = getCookie('token')\r\n        if(cookieChecked) {\r\n            if(localStorage.getItem('user')){\r\n                return JSON.parse(localStorage.getItem('user'));\r\n            }else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}